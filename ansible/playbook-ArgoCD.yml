

---
- name: Configure Linux VM and Install Docker
  hosts: DockerServers
  become: yes

  tasks:
    - name: Update apt cache and upgrade packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
      when: ansible_os_family == "Debian"

    - name: Update yum/dnf cache and upgrade packages
      ansible.builtin.yum:
        name: '*'
        state: latest
      when: ansible_os_family == "RedHat"

    - name: Install dependencies for Docker
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker APT repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Docker Engine, Docker CLI, containerd.io, Docker Buildx, Docker Compose plugin
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Add current user to docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Start and enable Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Copy _vm.env to VM
      ansible.builtin.copy:
         src: /mnt/d/Data/DevOps/FortStark_Assessment/Todo-List-nodejs/_vm.env
         dest: /home/fortstark/.env

#########################################################################################################################################       
################################################        USING ARGOCD & Kubernetes        ################################################
#########################################################################################################################################

    - name: Download Minikube
      ansible.builtin.shell: |
         curl -LO https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64 && sudo install /home/fortstark/minikube-linux-amd64 /usr/local/bin/minikube 

    - name: Install Kubectl
      ansible.builtin.shell: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    - name: Start Minikube
      ansible.builtin.shell: "minikube start"
      become: no
 
    - name: Install Argo CD with minikube's kubectl
      ansible.builtin.shell: |
          minikube kubectl -- create namespace argocd && \
          minikube kubectl -- apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      become: no
 

    - name: Wait for 1 Minute for ArgoCD Server to Start
      ansible.builtin.pause:
        minutes: 3

    - name: Port Forward ArgoCD Server
      ansible.builtin.shell: |
        kubectl port-forward svc/argocd-server -n argocd 8000:443 &
      
      #To access argocd go to localhost:8000 on VM and sign in with username "admin".
      #To get the password use "kubectl get secret argocd-initial-admin-secret -n argocd -o yaml" and decode it with "echo <ENCODED_PASSWORD> | base64 --decode"

    - name: Copy Kubernetes Folder
      ansible.builtin.copy:
       src: /mnt/d/Data/DevOps/FortStark_Assessment/Todo-List-nodejs/kubernetes/
       dest: /home/fortstark/kubernetes

    - name: Create MongoDB URI & Docker Hub Secret
      ansible.builtin.shell: |
        minikube kubectl -- apply -f /home/fortstark/kubernetes/secrets/secret-mongodb.yaml  && minikube kubectl -- apply -f /home/fortstark/kubernetes/secrets/secret-docker.yaml
      become: no    
    #Output should be "secret/mongodb-uri-secret created" & "secret/docker-pull-secret created"

    - name: Delete Secrets
      ansible.builtin.shell: "sudo rm -r /home/fortstark/kubernetes/secrets"

    - name: Apply application.yaml & service.yaml #The deployment.yaml should be applied automatically from github
      ansible.builtin.shell: |
        minikube kubectl -- apply -f /home/fortstark/kubernetes/application.yaml && minikube kubectl -- apply -f /home/fortstark/kubernetes/service.yaml
      become: no
# To connect to the App Container IP use "minikube service todo-app-node-service --url" to get the IP with the Port

